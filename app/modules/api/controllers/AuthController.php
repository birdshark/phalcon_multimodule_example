<?php

namespace Application\Modules\Api\Controllers;

use Application\Common\Models\Admins;
use Application\Common\Models\PermissionRole;
use Application\Common\Models\RoleAdmin;
use Application\Common\Models\Roles;
use Application\Modules\Api\Plugins\TokenPlugin;
use Phalcon\Acl;
use Phalcon\Acl\Adapter\Memory as AclList;

class AuthController extends ControllerBase
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function startAction(){
        if($this->request->isPost()){
            $email = $this->params['email'];
            $password = $this->params['password'];
            // search user from db
            $admin = Admins::findFirst(array(
                "email = :email:",
                'bind' => array(
                    'email'    => $email,
                )
            ));
            if(!$admin){
                return $this->response->setJsonContent(['data'=>$admin]);
            }
            if($this->security->checkHash($password, $admin->password)){
                $roles_info = (new RoleAdmin())->getRole($admin->id);
                $roles = pluck($roles_info,['name']);
                $all_permissions = TokenPlugin::getInitAcl('permission');
                $permissions = [];
                foreach ($roles as $role){
                    $permissions = array_merge($all_permissions[$role],$permissions);
                }
                $token = auth_code($admin->id .'|'. implode(',',$roles),"auth_token");
                return $this->response->setJsonContent(['permissions'=>$permissions,'uid'=>$admin->id,'avatar'=>'http://'.$_SERVER['HTTP_HOST'].$admin->avatar,'nick'=>$admin->name,'server'=>$_SERVER, 'token'=> $token]);
            }else{
                return $this->response->setJsonContent(['data'=>false]);
            }
        }
    }




}

